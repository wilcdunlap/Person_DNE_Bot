# import requests for html parsing
import requests
# import randint for random number generation
from random import randint
# import Image for image processing
from PIL import Image
# import BytesIO for image pull
from io import BytesIO
# import codecs for decoding/encoding to handle japanese text
import codecs
# import facebook to actually post the post
import facebook
# import logging for future use
import logging
# testing markov chains
import random as randm
import numpy as nmpy
import datetime
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import markovify #Markov Chain Generator

# Website for this person does not exist
PersonPage = "https://www.thispersondoesnotexist.com/image"
# Use requests.get to scrape the page
Personresult = requests.get(PersonPage, headers={'User-Agent': 'Mozilla/5.0 (Platform; Security; OS-or-CPU; Localization; rv:1.4) Gecko/20030624 Netscape/7.1 (ax)'})

# Use pandas as pd.read_csv to read the corpus we're using for the test. I'm using ABC News headlines for now
inp = pd.read_csv('C:\\Users\\USERNAME\\Desktop\\Python\\DataSets\\million-headlines\\abcnews-date-text.csv')
#this outputs the top three lines, but not necessary for production
#inp.head(3)

# Here, we create text_model by utilizing the Text function from markovify, creating a markov chain
text_model = markovify.Text(inp.headline_text, state_size = 2)
# Finally, we make a sentence out of the text model, capitalize the first letter, and then convert it to a string
msg=str(text_model.make_sentence()).capitalize()

# real life waifus, just whatever person is currently on the page when we scraped it
img = (Image.open(BytesIO(Personresult.content)))
# you can use img.show() to see it in real time but it's not necessary for production
#img.show()
# Here, I save a copy of the picture as 'person.jpg'. This may not be strictly necessary but can be useful for testing
img.save('person.jpg')
# Here we define our unique token for posting to the bot. It will be blank on github so nobody else can post to my facebook page
token=""

#H Here we define the postToFacebook function
# It utilizes the facebook GraphAPI to post pictures and/or text, using a token generated by the bot access token tool
def postToFacebook(token, message=msg):
	graph = facebook.GraphAPI(token)
	post_id = graph.put_photo(image = open('person.jpg', 'rb'), message = message)["post_id"]
	print(f"Successfully posted {post_id} to facebook", file=open("person_bot_log.log", "a"))

# Finally, we actually post to facebook using the token
postToFacebook(token)
# Here we take the current date time and print it to the log for maintenance and diagnostic purposes
nowdate= datetime.datetime.now()
print(nowdate, file=open("person_bot_log.log", "a"))
# This bot takes a little while longer than the original waifubot to post, mostly due to the markovify on the fly. Waifubot did all that for us
# So when it runs, it's faster; it just scrapes the text directly.
